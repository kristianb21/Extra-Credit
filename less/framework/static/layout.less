/*=============================================================================
FRAMEWORK - LAYOUT - Generic layout styling mixin's and extensions
===========================================================================*/

//-----------------------------------------------------------------------//
//-------------------------------CONTENTS--------------------------------//
//-----------------------------------------------------------------------//

// 01.  Sections (sites min width, clearfix)
// 02.  Group (sites max width, clearfix)
// 03.  Padding
// 04.  Margin
// 05.  Positioning
// 06.  Responsive
// 07.  Layers

//-----------------------------------------------------------------------//
//--------------------------------CONTENTS-------------------------------//
//-----------------------------------------------------------------------//

//---------------------------------------//
//-------------01. SECTIONS--------------//
//---------------------------------------//

.section {
  padding: @section-padding @site-margin @section-padding-btm @site-margin;
  min-width: @site-min-width;
}

//---------------------------------------//
//--------------02. GROUPS---------------//
//---------------------------------------//


.group {
  max-width: @site-max-width;
  margin-left: auto;
  margin-right: auto;
  &:extend(.group-full all);
}
.group-full {
  &:extend(.cf all);
  .group {
    max-width: none;
    min-width: 0;
    margin-left: 0;
    margin-right: 0;
  }
}
.group-full when (@toggle-border-box = off) {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

//---------------------------------------//
//-------------03. PADDING---------------//
//---------------------------------------//

// IDEA: Make margins with breakpoints?

// CREATE PADDING CLASSES
.mix-padding-class(@unit: 0, @class: unset) when not (@class = unset){
  .p-@{class} { padding: @unit; }
  .p-right-@{class} { padding-right: @unit; }
  .p-left-@{class} { padding-left: @unit; }
  .p-top-@{class} { padding-top: @unit; }
  .p-btm-@{class} { padding-bottom: @unit; }
  .p-sides-@{class} {
    padding-left: @unit;
    padding-right: @unit;
  }
  .p-ends-@{class} {
    padding-top: @unit;
    padding-bottom: @unit;
  }
}
.mix-padding-class(@unit: 0, @class: unset) when (@class = unset) {
  .p-all { padding: @unit; }
  .p-right { padding-right: @unit; }
  .p-left { padding-left: @unit; }
  .p-top { padding-top: @unit; }
  .p-btm { padding-bottom: @unit; }
  .p-sides {
    padding-left: @unit;
    padding-right: @unit;
  }
  .p-ends {
    padding-top: @unit;
    padding-bottom: @unit;
  }
}


//---------------------------------------//
//-------------04. MARGINS---------------//
//---------------------------------------//

// NO MARGINS

// GRID MARGINS
.m-bt-grid { margin-bottom: @site-grid-gutter; }
.m-tp-grid { margin-top: @site-grid-gutter; }

// CREATE SET MARGINS
.mix-margin-class(@unit, @class: unset) when not (@class = unset) {
  .m-@{class} { margin: @unit; }
  .m-right-@{class} { margin-right: @unit; }
  .m-left-@{class} { margin-left: @unit; }
  .m-top-@{class} { margin-top: @unit; }
  .m-btm-@{class} { margin-bottom: @unit; }
  .m-sides-@{class} {
    margin-left: @unit;
    margin-right: @unit;
  }
  .m-ends-@{class} {
    margin-top: @unit;
    margin-bottom: @unit;
  }
}
.mix-margin-class(@unit, @class: unset) when (@class = unset) {
  .m-all { margin: @unit; }
  .m-right { margin-right: @unit; }
  .m-left { margin-left: @unit; }
  .m-top { margin-top: @unit; }
  .m-btm { margin-bottom: @unit; }
  .m-sides {
    margin-left: @unit;
    margin-right: @unit;
  }
  .m-ends {
    margin-top: @unit;
    margin-bottom: @unit;
  }
}


//---------------------------------------//
//------------05. POSITIONING------------//
//---------------------------------------//

.inline-block { .mix-inline-block(); }
.inline-block-child {
  div, li, ul, span { .mix-inline-block(); }
}
.inline-block-all {
  &:extend(.inline-block);
  &:extend(.inline-block-child);
}
.inline-left { display: inline; text-align: left; }
.inline-right { display: inline; text-align: right; }
.inline-child {
  div, li, ul, span { display: inline; }
}
.inline-all {
  display: inline;
  &:extend(.inline-child);
}
.float-left { float: left; max-width: 100%; }
.float-right { float: right; max-width: 100%;  }
.clear { clear: both; }
.center {
  margin-left: auto;
  margin-right: auto;
}
// Center an image inside a div
.center-img {
  img {
    display: block;
    margin-left: auto;
    margin-right: auto;
  }
}
.full, .full-image img {
	display: block;
	width: 100%;
	height: auto;
	clear: both;
}
.full-height { height: 100%; }
.full-height-all {
  height: 100%;
  div { height: inherit; }
}
.align-top { vertical-align: top; }
.align-mid { vertical-align: middle; }
.align-btm { vertical-align: bottom; }

//---------------------------------------//
//------------06. RESPONISIVE------------//
//---------------------------------------//

// NOTE: For any non-grid element, Or Split Element
// NOTE: Doesn't Work on Collumn Grids

.inline-mobile {
  @media @mobile { display: inline; }
}
.inline-tablet {
  @media @tablet { display: inline; }
}
.full-mobile {
  @media @mobile {
    width: 100%;
    float: none;
    clear: both;
  }
}
.full-tablet {
  @media @tablet {
    width: 100%;
    float: none;
    clear: both;
  }
}
.hide-mobile {
  @media @break-primary { display: none; }
}
.hide-tablet {
  @media @tablet { display: none; }
}

//---------------------------------------//
//--------------07. LAYERS---------------//
//---------------------------------------//

.loop-create-layers(@stop, @increment) when (@increment >= 0) {
	// Create Relative
	.layer-@{increment} {
		position: relative;
		z-index: @increment;
	}
	.layer--@{increment} {
		position: relative;
		z-index: ~"-@{increment}";  // Negative
	}
	//  Create absolute
	.layer-a-@{increment} {
		position: absolute;
		z-index: @increment;
	}
	.layer-a--@{increment} {
		position: absolute;
		z-index: ~"-@{increment}";  // Negative
	}
	// Call Loop
	.loop-create-layers(@stop, @increment - 1);
}

//---------------------------------------//
//--------------BOX MODEL----------------//
//---------------------------------------//

// Activates if you turn off border-box
.guard-contentbox-element() when (@toggle-border-box = off) {
  .content-box {
    box-sizing: content-box;
    div { box-sizing: inherit; }
  }
}
.guard-contentbox-element();




