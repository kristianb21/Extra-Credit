/* =============================================================================
 FRAMEWORK - GRID - All framework styles for Grid settings
 ========================================================================== */

//-----------------------------------------------------------------------//
//--------------------------------CLASSES--------------------------------//
//-----------------------------------------------------------------------//

//---------------------------------//
//---------COMMON CLASSES-----------//
//---------------------------------//

.grid-defualts {
  border:0px solid rgba(0,0,0,0);
  float: left;
  -moz-background-clip: padding-box !important;
  -webkit-background-clip: padding-box !important;
  background-clip: padding-box !important;
}
.grid-defualts when (@toggle-border-box = off) {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
.split-defualts {
  &:extend(.grid-defualts);
  &.float-right {
    &:extend(.float-right);
  }
  &.full-mobile {
    &:extend(.full-mobile);
  }
  &.center { float: off; }
}


//---------------------------------//
//---------SPLIT CLASSES-----------//
//---------------------------------//

// Apply to "Group"
.spl-left {
  font-size: 0;   // Remove whitespace (inline blocks)
  >div, >li {
    .mix-inline-block();
    vertical-align: top;
    float: off;
    // Set back defualt type for theme
    font-size: @type-base;
    line-height: @type-base-lh;
    font-family: @font-family;
    color: @par-color;
  }
}
.spl-center {
  text-align: center;
  &:extend(.spl-left all);
}
.spl-right {
  text-align: right;
  &:extend(.spl-left all);
}
.spl-btm {
  >div, >li {
    &:extend(.align-btm all);
  }
}
.spl-mid {
  >div, >li {
    &:extend(.align-mid all);
  }
}


//-----------------------------------------------------------------------//
//------------------------COLUMN GRID MIXIN------------------------------//
//-----------------------------------------------------------------------//

//--------------------------------------//
//------COLUMN GRID: Common Class-------//
//--------------------------------------//

.loop-create-grid(@col, @inc, @gut, @offsets: on, @prefix: ~"", @break: off) when (@inc = 0) {

  //----DEFUALT GRID----//

  .col-@{col} when (@break = off) {
    margin-left: @gut;
    &:extend(.grid-defualts);
  }
  .col-@{col}:first-child when (@break = off) {
    margin-left: 0;
  }

  //----BREAKPOINT GRID----//

  .col-@{prefix}-@{col} when not (@break = off) {
    @media @break { margin-left: @gut !important;}
    &:extend(.grid-defualts);
  }
  .col-@{prefix}-@{col}:first-child when not (@break = off) {
    @media @break {
      margin-left: 0 !important;
    }
  }
  .col-@{prefix}-@{col}.@{prefix}-first when not (@break = off) {
    @media @break { margin-left: 0 !important; }
  }

  //----GRID SNAP----//

  .col-@{col} when (@break = off) and (@grid-snap = on) {
    @media @mobile {
      width: 100% !important;
      float: off !important;
      margin-left: 0 !important;
    }
  }
}

//---------------------------------------------//
//-------COLUMN GRID: Width's & Offsets--------//
//---------------------------------------------//

.loop-create-grid(@col, @inc, @gut, @offsets: on, @prefix: ~"", @break: off) when (@inc > 0) {

  @one-col: (100% - (@gut * (@col - 1))) / @col;  // Calculate column width

  //----BREAKPOINT GRID----//

  // CREATE WIDTHs
  .col-@{prefix}-@{col}.span-@{prefix}-@{inc} when not (@break = off) {
     @media @break { width: (@one-col * @inc) + (@gut * (@inc - 1)); }
  }
  // CREATE OFFSETs
  .col-@{prefix}-@{col}.offset-@{prefix}-@{inc} when not (@break = off) and (@offsets = on) {
    // width = column length + missing gutters
    @media @break { margin-left: ((@one-col * @inc) + (@gut * (@inc + 1))) !important; } // Width of column + gutter of current
  }
  .col-@{prefix}-@{col}.offset-@{prefix}-@{inc}:first-child when not (@break = off) and (@offsets = on) {
    @media @break { margin-left: ((@one-col * @inc) + (@gut * @inc)) !important; }
  }

  //----DEFUALT GRID----//

   // CREATE WIDTHs
  .col-@{col}.span-@{inc} when (@break = off) {
     width: (@one-col * @inc) + (@gut * (@inc - 1));
  }
  // CREATE OFFSETs
  .col-@{col}.offset-@{inc} when (@break = off) and (@offsets = on) {
    margin-left: ((@one-col * @inc) + (@gut * (@inc + 1))); // Width of column + gutter of current
  }
  .col-@{col}.offset-@{inc}:first-child when (@break = off) and (@offsets = on) {
    margin-left: ((@one-col * @inc) + (@gut * @inc));
  }

  //----LOOP----//

  .loop-create-grid(@col, @inc - 1, @gut, @offsets, @prefix, @break);
}

//--------------------------------------------------------//
//----------------------SPLITS MIXIN----------------------//
//--------------------------------------------------------//

//--------------------------------------//
//---------SPLITS: Common Class---------//
//--------------------------------------//
// @inc = increment
.loop-create-split(@total, @inc, @prefix: ~"", @break: off) when (@inc = 0) {

  //----DEFUALT SPLIT----//

  .spl-@{total} when (@break = off) {
    &:extend(.split-defualts all);
    &.full-tablet {
      &:extend(.full-tablet);
    }
  }

  //----BREAKPOINT SPLIT----//

  .spl-@{prefix}-@{total} when not (@break = off) {
    &:extend(.split-defualts all);
  }
}

//---------------------------------------------//
//----------SPLITS: Width's & Offsets----------//
//---------------------------------------------//

.loop-create-split(@total, @inc, @prefix: ~"", @break: off) when (@inc > 0) {

  //----DEFUALT SPLIT----//

  .spl-@{total}.span-@{inc} when (@break = off) {
    width: (100% * @inc) / @total;
  }

  //----BREAKPOINT SPLIT----//

  .spl-@{prefix}-@{total}.span-@{prefix}-@{inc} when not (@break = off) {
    @media @break { width: (100% * @inc) / @total; }
  }

  //----LOOP----//

  .loop-create-split(@total, @inc - 1, @prefix, @break);
}